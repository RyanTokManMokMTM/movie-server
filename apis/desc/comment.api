syntax = "v1"

info(
    title: "Post Commnet API"
    desc: "post comment API"
    author: "Jackson.tmm"
    email: "ryantokmanmokmtm"
    version: "demo"
)

//Current User
type (
    CreateCommentReq {
        PostID uint `path:"post_id"`
        Comment string `json:"comment"`
    }
    CreateCommentResp {
        CommentID uint `json:"id"`
        CreateAt int64 `json:"create_at"`
    }

    CreateReplyCommentReq {
        PostID uint `path:"post_id"`
        ReplyCommentId uint `path:"comment_id"`
        ParentCommentID uint `json:"parent_id"`
        Comment string `json:"comment"`
    }
    CreateReplyCommentResp {
        CommentID uint `json:"id"`
        CreateAt int64 `json:"create_at"`
    }

    UpdateCommentReq {
//        PostID uint `path:"post_id"`
        CommentID uint `path:"comment_id"`
        Comment string `json:"comment"`
    }
    UpdateCommentResp {
        UpdateAt int64 `json:"update_at"`
    }

    DeleteCommentReq {
        CommentID uint `path:"comment_id"`
    }
    DeleteCommentResp {}

    GetPostCommentsReq {
        PostID uint `path:"post_id"`
        Page uint `form:"page,default=1"`
        Limit uint `form:"limit,default=20"`
    }
    GetPostCommentsResp {
        Comments []CommentInfo `json:"comments"`
        MetaData MetaData `json:"meta_data"`
    }

    GetReplyCommentReq {

        ParentCommentID uint `path:"comment_id"`
        Page uint `form:"page,default=1"`
        Limit uint `form:"limit,default=5"`

    }
    GetReplyCommentResp {
        ReplyComments []CommentInfo `json:"reply"`
        MetaData MetaData `json:"meta_data"`
    }

    CountPostCommentsReq {
        PostId uint `path:"post_id"`
    }
    CountPostCommentsResp {
        TotalComment uint `json:"total_comment"`
    }
)

//New Feature
//To Other User
//Reply , Like Comment etc
//
//type (
//    LikePostCommentReq {
//        PostID int64 `path:"post_id"`
//        CommentID int64 `json:"comment_id"`
//    }
//    LikePostCommentResp {}
//
//    ReplyPostCommentReq {
//        PostID int64 `path:"post_id"`
//        CommentID int64 `json:"comment_id"`
//        Comment string `json:"comment"`
//    }
//    ReplyPostCommentResp {}
//)

type (
    CommentInfo {
        CommentID uint `json:"id"`
        UserInfo CommentUser `json:"user_info"`
        Comment string `json:"comment"`
        UpdateAt int64 `json:"update_at"`
        ReplyID uint `json:"reply_id"`
        ReplyTo UserInfo `json:"reply_to"`
        ReplyComment uint `json:"reply_comments"`
        LikesCount uint `json:"comment_likes_count"`
        ParentCommentID uint `json:"parent_comment_id"`
        // is_user_liked
        IsLiked bool `json:"is_liked"`
    }

    CommentUser {
        UserID uint `json:"id"`
        UserName string `json:"name"`
        UserAvatar string `json:"avatar"`
    }
)

@server(
    group: comment
    prefix : /api/v1
    jwt: Auth
)
service MovieService {
    @doc (
        summary : "Create Comment"
    )
    @handler CreateComment
    post /comments/:post_id(CreateCommentReq) returns (CreateCommentResp);

    @doc (
        summary : "Create A New Reply Comment"
    )
    @handler CreateReplyComment
    post /comments/:post_id/reply/:comment_id(CreateReplyCommentReq) returns (CreateCommentResp);

    @doc (
        summary : "Update Comment"
    )
    @handler UpdateComment
    patch /comments/:comment_id(UpdateCommentReq) returns (UpdateCommentResp);


    @doc (
        summary : "Delete Comment"
    )
    @handler DeleteComment
    delete /comments/:comment_id(DeleteCommentReq) returns (DeleteCommentResp);

    //with liked field
    @doc (
        summary : "Get Post Comments"
    )
    @handler GetPostComment
    get /comments/:post_id(GetPostCommentsReq) returns (GetPostCommentsResp);

    @doc (
        summary : "Get Reply Comments by id"
    )
    @handler GetReplyComment
    get /comments/reply/:comment_id(GetReplyCommentReq) returns (GetReplyCommentResp);
}

//@server(
//    group: comment
//    prefix : /api/v1
//)
//service MovieService {
//    @doc (
//        summary : "Get Post Comments"
//    )
//    @handler GetPostComment
//    get /comments/:post_id(GetPostCommentsReq) returns (GetPostCommentsResp);
//
//    @doc (
//        summary : "Get Reply Comments by id"
//    )
//    @handler GetReplyComment
//    get /comments/reply/:comment_id(GetReplyCommentReq) returns (GetReplyCommentResp);
//}