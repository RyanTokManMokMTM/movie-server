syntax = "v1"
//
info(
    title: "custom list API"
    desc: "custom list API"
    author: "Jackson.tmm"
    email: "ryantokmanmokmtm"
    version: "demo"
)

type (
    CreateCustomListReq {
        Title string `json:"title"`
        Intro string `json:"intro"`
    }
    CreateCustomListResp {
        ID uint `json:"id"`
        Title string `json:"title"`
        Intro string `json:"intro"`
    }

    UpdateCustomListReq {
        ID uint `json:"list_id"`
        Title string `json:"title"`
        Intro string `json:"intro"`
    }
    UpdateCustomListResp {}

    DeleteCustomListReq {
        ID uint `json:"list_id"`
    }
    DeleteCustomListResp {}

    AllCustomListReq {
        ID uint `path:"user_id"`
        Page uint `form:"page,default=1"`
        Limit uint `form:"limit,default=20"`
    }
    AllCustomListResp {
        Lists []ListInfo `json:"lists"`
        MetaData MetaData `json:"meta_data"`
    }

    UserListReq {
        ID uint `path:"list_id"`
    }
    UserListResp {
        List ListInfo `json:"list"`
    }

    InsertMovieReq {
        ListID uint `path:"list_id"`
        MovieID uint `path:"movie_id"`
    }
    InsertMovieResp{}

    RemoveMovieReq {
        ListID uint `path:"list_id"`
        MovieID uint `path:"movie_id"`
    }
    RemoveMovieResp{}

    GetOneMovieFromUserListReq {
        MovieID uint `path:"movie_id"`
    }
    GetOneMovieFromUserListResp {
        ListId uint `json:"list_id"`
        IsMovieInList bool `json:"is_movie_in_list"`
    }

    RemoveListMoviesReq {
        ListId uint `path:"id"`
        MovieIds []uint `json:"movie_ids"`
    }

    RemoveListMoviesResp {
    }

    CountCollectedMovieReq {
        UserID uint `json:"user_id"`
    }

    CountCollectedMovieResp {
        total uint `json:"total"`
    }



)

type (
    ListInfo {
        ID uint `json:"id"`
        Title string `json:"title"`
        Intro string `json:"intro"`
        //Including a list of movie!
        Movies []MovieInfo `json:"movie_list"`
    }


)

@server (
    group : custom_list
    prefix : /api/v1
)
service MovieService {
    @doc (
        summary : "Get All User List by user ID"
    )
    @handler GetAllUserList
    get /lists/:user_id(AllCustomListReq) returns (AllCustomListResp);

    @doc (
        summary : "Get a custom list by list id"
    )
    @handler GetListByID
    get /list/:list_id(UserListReq) returns (UserListResp);

    @doc (
        summary : "Get a total collected movie by list id"
    )
    @handler CountCollectedMovie
    get /list/movies/count(CountCollectedMovieReq) returns (CountCollectedMovieResp);

}

@server (
    group : custom_list
    prefix : /api/v1
    jwt : Auth
)
service MovieService {
    @doc (
        summary :"Get a custom list by list id"
    )
    @handler CreateCustomList
    post /lists(CreateCustomListReq) returns (CreateCustomListResp);

    @doc (
        summary : "Update a custom list"
    )
    @handler UpdateCustomList
    patch /lists(UpdateCustomListReq) returns (UpdateCustomListResp);

    @doc (
        summary : "Delete a custom list"
    )
    @handler DeleteCustomList
    delete /lists(DeleteCustomListReq) returns (DeleteCustomListResp);

    @doc (
        summary : "Add Movie To List"
    )
    @handler InsertMovieToList
    post /list/:list_id/movie/:movie_id(InsertMovieReq) returns (InsertMovieResp);

    @doc (
        summary : "Remove a Movie From List"
    )
    @handler RemoveMovieFromList
    delete /list/:list_id/movie/:movie_id(RemoveMovieReq) returns (RemoveMovieResp);


    @doc (
        summary : "Remove some collected movie from list"
    )
    @handler RemoveListMovies
    delete /list/movies/:id(RemoveListMoviesReq) returns (RemoveListMoviesResp)

    @doc (
        summary : "Find one movie from list - from any list"
    )
    @handler GetOneMovieFromUserList
    get /list/movie/:movie_id(GetOneMovieFromUserListReq) returns (GetOneMovieFromUserListResp);
}