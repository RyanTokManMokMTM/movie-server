// Code generated by goctl. DO NOT EDIT.
package types

type UserLoginRequest struct {
	Email    string `json:"email" validate:"required,max=32"`
	Password string `json:"password" validate:"required,min=8,max=32"`
}

type UserLoginResponse struct {
	Token   string `json:"token"`
	Expired int64  `json:"expired"`
}

type UserSignUpRequest struct {
	UserName        string `json:"name"`
	Email           string `json:"email" validate:"email,max=32"`
	Password        string `json:"password" validate:"min=8,max=32"`
	ConfirmPassword string `json:"confirmPassword" validate:"eqfield=Password"`
}

type UserSignUpResponse struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
}

type UserInfoRequest struct {
	ID int64 `path:"id"`
}

type UserInfoResponse struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Email string `jsons:"email"`
}

type UserProfileRequest struct {
}

type UserProfileResponse struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Email  string `json:"email"`
	Avatar string `json:"avatar"`
}

type MoviePageListByGenreRequest struct {
	Id int64 `form:"id" validate:"numeric"`
}

type MoviePageListByGenreResponse struct {
	Resp []*MovieInfo `json:"movie_genres_result"`
}

type MovieGenresInfoRequest struct {
	Id int64 `form:"id" validate:"numeric"`
}

type MovieGenresInfoResponse struct {
	Resp []*GenreInfo `json:"genres"`
}

type MovieInfo struct {
	Adult            int64   `json:"adult"`
	BackdropPath     string  `json:"backdrop_path"`
	MovieID          int64   `json:"id"`
	OriginalLanguage string  `json:"original_language"`
	OriginalTitle    string  `json:"original_title"`
	Overview         string  `json:"overview"`
	Popularity       float64 `json:"popularity"`
	PosterPath       string  `json:"poster_path"`
	ReleaseDate      string  `json:"release_date"`
	Title            string  `json:"title"`
	RunTime          int64   `json:"runtime"`
	Video            int64   `json:"video"`
	VoteAverage      float64 `json:"vote_average"`
	VoteCount        int64   `json:"vote_count"`
}

type GenreInfo struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}
