// Code generated by goctl. DO NOT EDIT.
package types

type HealthCheckReq struct {
}

type HealthCheckResp struct {
	Result string `json:"result"`
}

type UserLoginRequest struct {
	Email    string `json:"email" validate:"required,max=32,email"`
	Password string `json:"password" validate:"required,min=8,max=32"`
}

type UserLoginResponse struct {
	Token   string `json:"token"`
	Expired int64  `json:"expired"`
}

type UserSignUpRequest struct {
	UserName string `json:"name"`
	Email    string `json:"email" validate:"email,max=32"`
	Password string `json:"password" validate:"min=8,max=32"`
}

type UserSignUpResponse struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
}

type UserInfoRequest struct {
	ID int64 `path:"id"`
}

type UserInfoResponse struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Email string `jsons:"email"`
}

type UserProfileRequest struct {
}

type UserProfileResponse struct {
	ID     int64  `json:"id"`
	Name   string `json:"name"`
	Email  string `json:"email"`
	Avatar string `json:"avatar"`
	Cover  string `json:"cover"`
}

type MoviePageListByGenreRequest struct {
	Id int64 `form:"id" validate:"numeric"`
}

type MoviePageListByGenreResponse struct {
	Resp []*MovieInfo `json:"movieInfos"`
}

type MovieGenresInfoRequest struct {
	Id int64 `form:"id" validate:"numeric"`
}

type MovieGenresInfoResponse struct {
	Resp []*GenreInfo `json:"genres"`
}

type MovieInfo struct {
	MovieID     int64   `json:"id"`
	PosterPath  string  `json:"poster"`
	Title       string  `json:"title"`
	VoteAverage float64 `json:"vote_average"`
}

type GenreInfo struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

type CreateLikedMovieReq struct {
	MovieID int64 `json:"movie_id"`
}

type CreateLikedMovieResp struct {
	LikedMovieID int64 `json:"liked_movie_id"`
	UserID       int64 `json:"user_id"`
}

type DeleteLikedMoviedReq struct {
	MovieID int64 `json:"movie_id"`
}

type DeleteLikedMovieResp struct {
}

type AllUserLikedMoviesReq struct {
	ID int64 `path:"user_id"`
}

type AllUserAllLikedMoviesResp struct {
	LikedMoviesList []*LikedMovieInfo `json:"liked_movies"`
}

type LikedMovieInfo struct {
	MovieID      int64       `json:"id"`
	MovieName    string      `json:"movie_name"`
	Genres       []GenreInfo `json:"genres"`
	MoviePoster  string      `json:"movie_poster"`
	MovieVoteAvg float32     `json:"vote_average"`
}

type CreateCustomListReq struct {
	Title string `json:"title"`
}

type CreateCustomListResp struct {
	ID       int64  `json:"id"`
	Title    string `json:"title"`
	UpdateOn int64  `json:"update_on"`
}

type UpdateCustomListReq struct {
	ID    int64  `json:"id"`
	Title string `json:"title"`
}

type UpdateCustomListResp struct {
}

type DeleteCustomListReq struct {
	ID int64 `json:"id"`
}

type DeleteCustomListResp struct {
}

type AllCustomListReq struct {
	ID int64 `path:"user_id"`
}

type AllCustomListResp struct {
	Lists []ListInfo `json:"lists"`
}

type UserListReq struct {
	ID int64 `path:"list_id"`
}

type UserListResp struct {
	List ListInfo `json:"list"`
}

type ListInfo struct {
	ID       int64  `json:"id"`
	Title    string `json:"title"`
	UpdateOn int64  `json:"update_on"`
}

type CreatePostReq struct {
	PostTitle string `json:"post_title"`
	PostDesc  string `json:"post_desc"`
	MovieID   int64  `json:"movie_id"`
}

type CreatePostResp struct {
	PostID     int64 `json:"id"`
	CreateTime int64 `json:"create_time"`
}

type UpdatePostReq struct {
	PostID    int64  `json:"post_id"`
	PostTitle string `json:"post_title"`
	PostDesc  string `json:"post_desc"`
}

type UpdatePostResp struct {
}

type DeletePostReq struct {
	PostID int64 `json:"post_id"`
}

type DeletePostResp struct {
}

type PostsInfoReq struct {
}

type PostsInfoResp struct {
	Infos []PostInfo `json:"post_info"`
}

type PostInfosByUserReq struct {
	UserID int64 `path:"user_id"`
}

type PostInfosByUserResp struct {
	Info []PostInfo `json:"post_info"`
}

type PostInfo struct {
	PostID           int64         `json:"post_id"`
	PostTitle        string        `json:"post_title"`
	PostDesc         string        `json:"post_desc"`
	PostMovie        PostMovieInfo `json:"post_movie_info"`
	PostLikeCount    int64         `json:"post_like_count"`
	PostCommentCount int64         `json:"post_comment_count"`
	CreateTime       int64         `json:"create_time"`
	UpdateTime       int64         `json:"edit_time"`
}

type PostMovieInfo struct {
	MovieID    int64  `json:"id"`
	PosterPath string `json:"poster"`
	Title      string `json:"title"`
}
