// Code generated by goctl. DO NOT EDIT.
package types

type HealthCheckReq struct {
}

type HealthCheckResp struct {
	Result string `json:"result"`
}

type UserLoginRequest struct {
	Email    string `json:"email" validate:"required,max=32"`
	Password string `json:"password" validate:"required,min=8,max=32"`
}

type UserLoginResponse struct {
	Token   string `json:"token"`
	Expired int64  `json:"expired"`
}

type UserSignUpRequest struct {
	UserName string `json:"name"`
	Email    string `json:"email" validate:"email,max=32"`
	Password string `json:"password" validate:"min=8,max=32"`
}

type UserSignUpResponse struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
}

type UserInfoRequest struct {
	ID int64 `path:"id"`
}

type UserInfoResponse struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Email string `jsons:"email"`
}

type UserProfileRequest struct {
}

type UserProfileResponse struct {
	ID          int64             `json:"id"`
	Name        string            `json:"name"`
	Email       string            `json:"email"`
	Avatar      string            `json:"avatar"`
	Cover       string            `json:"cover"`
	LikedMovies []*LikedMovieInfo `json:"liked_movies"`
}

type MoviePageListByGenreRequest struct {
	Id int64 `form:"id" validate:"numeric"`
}

type MoviePageListByGenreResponse struct {
	Resp []*MovieInfo `json:"movieInfos"`
}

type MovieGenresInfoRequest struct {
	Id int64 `form:"id" validate:"numeric"`
}

type MovieGenresInfoResponse struct {
	Resp []*GenreInfo `json:"genres"`
}

type MovieInfo struct {
	MovieID     int64   `json:"id"`
	PosterPath  string  `json:"poster"`
	Title       string  `json:"title"`
	VoteAverage float64 `json:"vote_average"`
}

type GenreInfo struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

type ListsReq struct {
}

type ListsResp struct {
	Lists []*UserListInfo `json:"resp"`
}

type UserListReq struct {
}

type UserListResp struct {
	Lists []*ListInfo `json:"listInfo"`
}

type CreateNewUserListReq struct {
	Title string `json:"title" validate:"required"`
}

type CreateNewUserListResp struct {
	Id        int64  `json:"id"`
	ListTitle string `json:"list_title"`
	UserId    int64  `json:"user_id"`
}

type UpdateUserListReq struct {
	Id    int64  `json:"id" validate:"required"`
	Title string `json:"title" validate:"required"`
}

type UpdateUserListResp struct {
}

type DeleteUserListReq struct {
	Id int64 `json:"id" validate:"required"`
}

type DelteUserListResp struct {
}

type ListInfo struct {
	Id         int64  `json:"id"`
	ListTitle  string `json:"list_title"`
	UserId     int64  `json:"user_id"`
	UpdateTime string `json:"update_time"`
}

type UserInfo struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Email  string `json:"email"`
	Avatar string `json:"avatar"`
}

type UserListInfo struct {
	Id         int64    `json:"id"`
	ListTitle  string   `json:"list_title"`
	UpdateTime string   `json:"update_time"`
	Owner      UserInfo `json:"owner"`
}

type ListDetailInfoReq struct {
	ListID int64 `path:"list_id"`
}

type ListDetailInfoResp struct {
	Resp []*ListMovieInfo `json:"resp"`
}

type CreateListDetailInfoReq struct {
	ListID int64 `json:"list_id"`
}

type CreateListDetailInfoResp struct {
	List ListMovieInfo `json:"list"`
}

type UpdateListDetailInfoReq struct {
	ListID int64 `json:"list_id"`
}

type UpdateListDetailInfoResp struct {
}

type DeleteListDetailInfoReq struct {
	ListID int64 `json:"list_id"`
}

type DeleteListDetailInfoResp struct {
}

type ListMovieInfo struct {
	Id              int64  `json:"id"`
	ListId          int64  `json:"list_id"`
	MovieId         int64  `json:"movie_id"`
	MoviePosterPath string `json:"movie_poster_path"`
	UserFeeling     string `json:"user_feeling"`
	UserRatetext    string `json:"user_ratetext"`
}

type CreateLikedMovieReq struct {
	MovieID int64 `json:"movie_id"`
}

type CreateLikedMovieResp struct {
	LikedMovieID int64 `json:"liked_movie_id"`
	UserID       int64 `json:"user_id"`
}

type DeleteLikedMoviedReq struct {
	MovieID int64 `json:"movie_id"`
}

type DeleteLikedMovieResp struct {
}

type UserAllLikedMoviesReq struct {
}

type UserAllLikedMoviesResp struct {
	LikedMoviesList []*LikedMovieInfo `json:"liked_movie_list"`
}

type LikedMovieInfo struct {
	MovieID      int64       `json:"id"`
	MovieName    string      `json:"movie_name"`
	Genres       []GenreInfo `json:"genres"`
	MoviePoster  string      `json:"movie_poster"`
	MovieVoteAvg float32     `json:"vote_average"`
}
